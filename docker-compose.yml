version: "3.9"

services:
  nginx:
      build:
        context: ./nginx
        dockerfile: ./Dockerfile
      ports:
        - 8000:80
        - 80:80
      depends_on:
        - web
      volumes:
        - ./static:/static
        - ./ticket_files:/ticket_files
        - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      restart: always
  db:
    image: postgres:14
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - ./.env
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    restart: always
  web:
    build: .
    command: >
     sh -c "python manage.py makemigrations && 
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - ./static:/static
      - ./ticket_files:/ticket_files
    expose:
      - 8000
    restart: always
    depends_on:
      - db
      - celery
    env_file:
      - ./.env
  # pgadmin:
  #     image: dpage/pgadmin4
  #     container_name: demo-pgadmin #you can change this
  #     depends_on:
  #       - db
  #     ports:
  #       - "5051:80"
  #     environment:
  #       PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
  #       PGADMIN_DEFAULT_PASSWORD: root
  #     restart: always
  redis:
    image: redis:latest
    healthcheck:
      test: redis-cli ping
      interval: 3s
      timeout: 5s
      retries: 5
    restart: always
    volumes:
      - redis_data:/data
  celery:
    build: .
    command: celery -A config worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - db
    restart: always
#  celery-beat:
#    build: .
#    command: celery -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
#    volumes:
#      - .:/app
#    depends_on:
#      - db
#      - redis
#      - celery

volumes:
  static:
  ticket_files:
  db:
  redis_data: